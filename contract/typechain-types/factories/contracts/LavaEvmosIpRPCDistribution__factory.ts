/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  ContractDeployTransaction,
  Provider,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  LavaEvmosIpRPCDistribution,
  LavaEvmosIpRPCDistributionInterface,
} from "../../contracts/LavaEvmosIpRPCDistribution";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "backupOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBackupOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "name",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
        ],
        internalType: "struct LavaEvmosIpRPCDistribution.Provider[]",
        name: "providers",
        type: "tuple[]",
      },
    ],
    name: "payProviders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newBackupOwner",
        type: "address",
      },
    ],
    name: "setBackUpOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610aa4806100a16000396000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e8146100fd5780638da5cb5b14610128578063b84046d714610153578063bf2554e21461017c5761007b565b806313af4035146100805780633af8e4ab146100a95780635c241612146100d45761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906106a1565b6101a7565b005b3480156100b557600080fd5b506100be6102d0565b6040516100cb91906106dd565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f691906108dc565b6102f6565b005b34801561010957600080fd5b5061011261048e565b60405161011f91906106dd565b60405180910390f35b34801561013457600080fd5b5061013d6104b7565b60405161014a91906106dd565b60405180910390f35b34801561015f57600080fd5b5061017a600480360381019061017591906106a1565b6104db565b005b34801561018857600080fd5b50610191610605565b60405161019e91906106dd565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061024e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61028d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610284906109a8565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061039d5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6103dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d3906109a8565b60405180910390fd5b60005b815181101561048a5760008282815181106103fd576103fc6109c8565b5b602002602001015160000151905060008383815181106104205761041f6109c8565b5b60200260200101516020015190508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610474573d6000803e3d6000fd5b505050808061048290610a26565b9150506103df565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806105825750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6105c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b8906109a8565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061066e82610643565b9050919050565b61067e81610663565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b6000602082840312156106b7576106b6610639565b5b60006106c58482850161068c565b91505092915050565b6106d781610663565b82525050565b60006020820190506106f260008301846106ce565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610746826106fd565b810181811067ffffffffffffffff821117156107655761076461070e565b5b80604052505050565b600061077861062f565b9050610784828261073d565b919050565b600067ffffffffffffffff8211156107a4576107a361070e565b5b602082029050602081019050919050565b600080fd5b600080fd5b6000819050919050565b6107d2816107bf565b81146107dd57600080fd5b50565b6000813590506107ef816107c9565b92915050565b60006040828403121561080b5761080a6107ba565b5b610815604061076e565b905060006108258482850161068c565b6000830152506020610839848285016107e0565b60208301525092915050565b600061085861085384610789565b61076e565b9050808382526020820190506040840283018581111561087b5761087a6107b5565b5b835b818110156108a4578061089088826107f5565b84526020840193505060408101905061087d565b5050509392505050565b600082601f8301126108c3576108c26106f8565b5b81356108d3848260208601610845565b91505092915050565b6000602082840312156108f2576108f1610639565b5b600082013567ffffffffffffffff8111156109105761090f61063e565b5b61091c848285016108ae565b91505092915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e6572202f206261636b75702063616e2063616c6c60008201527f20746869732066756e6374696f6e000000000000000000000000000000000000602082015250565b6000610992602e83610925565b915061099d82610936565b604082019050919050565b600060208201905081810360008301526109c181610985565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a31826107bf565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a6357610a626109f7565b5b60018201905091905056fea2646970667358221220a73a33273413cc82e99e3f0df6a456fffc56fa6416c84aef1655e9dac94a517264736f6c63430008130033";

type LavaEvmosIpRPCDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LavaEvmosIpRPCDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LavaEvmosIpRPCDistribution__factory extends ContractFactory {
  constructor(...args: LavaEvmosIpRPCDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LavaEvmosIpRPCDistribution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LavaEvmosIpRPCDistribution__factory {
    return super.connect(runner) as LavaEvmosIpRPCDistribution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LavaEvmosIpRPCDistributionInterface {
    return new Interface(_abi) as LavaEvmosIpRPCDistributionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LavaEvmosIpRPCDistribution {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LavaEvmosIpRPCDistribution;
  }
}
